{
  "resourceType": "Library",
  "id": "RuleFilters",
  "text": {
    "status": "generated",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><table class=\"grid dict\"><tr><th scope=\"row\"><b>Id: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">library-RuleFilters-1.0.0</td></tr><tr><th scope=\"row\"><b>Type: </b></th><td style=\"padding-right: 25px;\"> logic-library </td></tr><tr><th scope=\"row\"><b>Version: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">1.0.0</td></tr><tr><th scope=\"row\"><b>Status: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">active</td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"1\" scope=\"row\"><b>Related: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span>http://aphl.org/fhir/ecr/Library/library-FHIRHelpers|4.0.0</span></p></td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"7\" scope=\"row\"><b>Data Requirements: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>ValueSet</span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Observation</span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Encounter</span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Location</span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>CodeSystem</span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Organization</span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Organization</span></p></div></td></tr><tr style=\"vertical-align: top;\"><th scope=\"row\"><b>Content: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><b>type: </b><span>text/cql</span></td></tr><tr><td colspan=\"2\" style=\"padding-left: 25px; padding-right: 25px;\"><pre><code class=\"language-cql\">library RuleFilters version '1.0.0'\n\nusing FHIR version '4.0.0'\n\ninclude FHIRHelpers version '4.0.0'\n\ncodesystem &quot;UsageContext&quot;: 'http://terminology.hl7.org/CodeSystem/usage-context-type'\ncodesystem &quot;JurisdictionsList&quot;: 'http://hl7.org/fhir/us/ecr/CodeSystem/ersd-jurisdictions'\nvalueset &quot;Indeterminate or Equivocal Lab Result Value&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.1035'\nvalueset &quot;Negative or Undetected Lab Result Value&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.1034'\n\ncode &quot;focus&quot;: 'focus' from UsageContext\n//code &quot;Chlamydia&quot;: 'Chlamydia'\n\n/* parameter &quot;Triggering Encounter&quot; Encounter */\n\ncontext Patient\n\ndefine &quot;Chlamydia ValueSets&quot;:\n  [ValueSet] ValueSet\n    where exists (\n      ValueSet.useContext UseContext\n        where UseContext.code ~ &quot;focus&quot;\n          and not  IsNull(\n            UseContext.value Value\n              where Value.text = 'Chlamydia'\n          )\n    )\n\ndefine function ExpandValueSetCodes(value List&lt;ValueSet&gt;):\n  value Value\n    return Value.expansion.contains.code\n\ndefine function ExpandValueSetSystems(value List&lt;ValueSet&gt;):\n  value Value\n    return Value.expansion.contains.system\n\ndefine &quot;Flattened ValueSet Expansion Codes&quot;:\n  flatten( ExpandValueSetCodes(&quot;Chlamydia ValueSets&quot;) )\n\ndefine &quot;Flattened ValueSet Expansion Systems&quot;:\n  flatten( ExpandValueSetSystems(&quot;Chlamydia ValueSets&quot;) )\n\ndefine function ObservationWithSystemAndCodeInChlamydiaValueSets(observation Observation):\n    not IsNull(\n      observation.code  OConcept\n        where exists (\n          OConcept.coding OCoding\n            where ( OCoding.code in &quot;Flattened ValueSet Expansion Codes&quot; )\n               and OCoding.system in &quot;Flattened ValueSet Expansion Systems&quot;\n        )\n    )\n\ndefine function ObservationWithCodeInChlamydiaValueSets(observation Observation):\n  not IsNull(\n    observation.code  OConcept\n      where exists (\n        OConcept.coding OCoding where OCoding.code in flatten( ExpandValueSetCodes(&quot;Chlamydia ValueSets&quot;) )\n      )\n  )\n\ndefine function ChlamydiaObservations(observation Observation):\n  if exists (observation.code.coding.system)\n  then ObservationWithSystemAndCodeInChlamydiaValueSets(observation)\n  else ObservationWithCodeInChlamydiaValueSets(observation)\n\ndefine &quot;Chlamydia Test Results&quot;:\n  [Observation] O\n    where ChlamydiaObservations(O)\n      and O.status in { 'preliminary', 'final', 'amended', 'corrected' }\n\ndefine &quot;Triggering Encounter&quot;:\n[Encounter] E\n\ndefine &quot;Encounter Location References&quot;:\n  flatten(&quot;Triggering Encounter&quot; TriggeringEncounter\n    return TriggeringEncounter.location.location)\n\ndefine &quot;Locations Matching Encounter Location References&quot;:\n  [Location] Location\n    where exists (\n        &quot;Encounter Location References&quot; LocationReference\n          where ('Location/' + Location.id) ~ LocationReference.reference\n      )\n\n/* define &quot;Encounter Location Addresses And Patient Addresses&quot;:\n  &quot;Locations Matching Encounter Location References&quot;.address\n    union Patient.address */\n\ndefine &quot;Encounter Location Address&quot;:\n  &quot;Locations Matching Encounter Location References&quot; Address\n    return Tuple { state: Address.address.state,  postalCode: Address.address.postalCode }\n\ndefine &quot;Patient Address&quot;:\n  Patient.address PA\n  return Tuple { state: PA.state, postalCode: PA.postalCode }\n\n/* define &quot;Address Elements Relevant to Jurisdiction Qualification&quot;:\n  &quot;Encounter Location Addresses And Patient Addresses&quot; Address\n    return Tuple { state: Address.state,  postalCode: Address.postalCode } */\n\ndefine &quot;Jurisdictions&quot;:\n  flatten([CodeSystem] C\n    return C.concept Cpt\n      return Tuple { jurisdictionCode: Cpt.code,\n        definition: Cpt.definition,\n        jurisdictionType: Cpt.property P where P.code='type' return P.value as FHIR.string,\n        stateCode: Cpt.property P where P.code = 'state' return P.value as FHIR.code,\n        postalCode: Cpt.property P where P.code = 'postalcode' return P.value as FHIR.code\n        })\n\ndefine &quot;Encounter Address Postal Code is in Jurisdiction Codes&quot;:\n  &quot;Jurisdictions&quot; J\n    with &quot;Encounter Location Address&quot; LocationAddress\n      such that LocationAddress.postalCode in J.postalCode\n\ndefine &quot;Encounter Address State is in Jurisdiction Codes&quot;:\n    &quot;Jurisdictions&quot; J\n      with &quot;Encounter Location Address&quot; LocationAddress\n        such that LocationAddress.state in J.stateCode\n          and 'STATE' in J.jurisdictionType\n\ndefine &quot;Patient Address Postal Code is in Jurisdiction Codes&quot;:\n  &quot;Jurisdictions&quot; J\n    with &quot;Patient Address&quot; PA\n      such that PA.postalCode in J.postalCode\n\ndefine &quot;Patient Address State is in Jurisdiction Codes&quot;:\n  &quot;Jurisdictions&quot; J\n    with &quot;Patient Address&quot; PA\n      such that PA.state in J.stateCode\n        and 'STATE' in J.jurisdictionType\n\ndefine &quot;Address Exists in Jurisdiction Codes&quot;:\n  exists (\n    &quot;Encounter Address State is in Jurisdiction Codes&quot;\n      union &quot;Encounter Address Postal Code is in Jurisdiction Codes&quot;\n        union &quot;Patient Address State is in Jurisdiction Codes&quot;\n          union &quot;Patient Address Postal Code is in Jurisdiction Codes&quot;\n    )\n\ndefine function EncounterAddressJurisdictions():\n  if exists (&quot;Encounter Address Postal Code is in Jurisdiction Codes&quot;)\n    then &quot;Encounter Address Postal Code is in Jurisdiction Codes&quot;\n      else &quot;Encounter Address State is in Jurisdiction Codes&quot;\n\ndefine function PatientAddressJurisdictions():\n  if exists (&quot;Patient Address Postal Code is in Jurisdiction Codes&quot;)\n    then &quot;Patient Address Postal Code is in Jurisdiction Codes&quot;\n      else &quot;Patient Address State is in Jurisdiction Codes&quot;\n\ndefine &quot;Jurisdiction Codes Relevant to Encounter Addresses&quot;:\n  EncounterAddressJurisdictions()\n\ndefine &quot;Jurisdiction Codes Relevant to Patient Addresses&quot;:\n  PatientAddressJurisdictions()\n\ndefine &quot;Indeterminate Chlamydia Test Results&quot;:\n  &quot;Chlamydia Test Results&quot; O\n    let organization: [Organization]\n    where (\n      (\n        exists (\n            O.interpretation interpretationConcept\n              where interpretationConcept as CodeableConcept in &quot;Indeterminate or Equivocal Lab Result Value&quot;\n        )\n          or O.value as CodeableConcept in &quot;Indeterminate or Equivocal Lab Result Value&quot;\n      )\n        or &quot;Address Exists in Jurisdiction Codes&quot;\n    )\n\ndefine &quot;Negative Chlamydia Test Results&quot;:\n  &quot;Chlamydia Test Results&quot; O\n    let organization: [Organization]\n    where (\n      (\n        exists (\n            O.interpretation interpretationConcept\n              where interpretationConcept as CodeableConcept in &quot;Negative or Undetected Lab Result Value&quot;\n        )\n          or O.value as CodeableConcept in &quot;Negative or Undetected Lab Result Value&quot;\n      )\n        and &quot;Address Exists in Jurisdiction Codes&quot;\n    )\n\ndefine &quot;IsReportable&quot;:\n  exists &quot;Indeterminate Chlamydia Test Results&quot;\n    or exists &quot;Negative Chlamydia Test Results&quot;\n</code></pre>\n                    \n                    \n                </td>\n            </tr>\n        \n    </table>\n</div>"
  },
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "cqf-tooling"
    }
  } ],
  "url": "http://aphl.org/fhir/ecr/Library/RuleFilters",
  "version": "1.0.0",
  "name": "RuleFilters",
  "title": "Rule Filters",
  "status": "active",
  "experimental": true,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.0"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://aphl.org/fhir/ecr/Library/FHIRHelpers|4.0.0"
  }, {
    "type": "depends-on",
    "display": "Code system UsageContext",
    "resource": "http://terminology.hl7.org/CodeSystem/usage-context-type"
  }, {
    "type": "depends-on",
    "display": "Code system JurisdictionsList",
    "resource": "http://hl7.org/fhir/us/ecr/CodeSystem/ersd-jurisdictions"
  }, {
    "type": "depends-on",
    "display": "Value set Indeterminate or Equivocal Lab Result Value",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.1035"
  }, {
    "type": "depends-on",
    "display": "Value set Negative or Undetected Lab Result Value",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.1034"
  } ],
  "parameter": [ {
    "name": "Triggering Encounter",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "Encounter"
  }, {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "Chlamydia ValueSets",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "ValueSet"
  }, {
    "name": "Flattened ValueSet Expansion Codes",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "code"
  }, {
    "name": "Flattened ValueSet Expansion Systems",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "uri"
  }, {
    "name": "Chlamydia Test Results",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Triggering Encounters",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Encounter"
  }, {
    "name": "Encounter Location References",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Reference"
  }, {
    "name": "Locations Matching Encounter Location References",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Location"
  }, {
    "name": "Encounter Location Address",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Any"
  }, {
    "name": "Patient Address",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Any"
  }, {
    "name": "Jurisdictions",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Any"
  }, {
    "name": "Encounter Address Postal Code is in Jurisdiction Codes",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Any"
  }, {
    "name": "Encounter Address State is in Jurisdiction Codes",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Any"
  }, {
    "name": "Patient Address Postal Code is in Jurisdiction Codes",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Any"
  }, {
    "name": "Patient Address State is in Jurisdiction Codes",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Any"
  }, {
    "name": "Address Exists in Jurisdiction Codes",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Jurisdiction Codes Relevant to Encounter Addresses",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Any"
  }, {
    "name": "Jurisdiction Codes Relevant to Patient Addresses",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Any"
  }, {
    "name": "Indeterminate Chlamydia Test Results",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Negative Chlamydia Test Results",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Is Reportable",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Is Encounter In Progress",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Is Encounter Complete",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  } ],
  "dataRequirement": [ {
    "type": "Patient"
  }, {
    "type": "ValueSet",
    "codeFilter": [ {
      "path": "useContext.code"
    } ]
  }, {
    "type": "Observation"
  }, {
    "type": "Encounter"
  }, {
    "type": "Encounter"
  }, {
    "type": "Encounter",
    "codeFilter": [ {
      "path": "reference"
    } ]
  }, {
    "type": "Location"
  }, {
    "type": "Location"
  }, {
    "type": "Patient"
  }, {
    "type": "CodeSystem"
  }, {
    "type": "CodeSystem"
  }, {
    "type": "Location",
    "codeFilter": [ {
      "path": "postalCode"
    } ]
  }, {
    "type": "CodeSystem"
  }, {
    "type": "Location",
    "codeFilter": [ {
      "path": "state"
    } ]
  }, {
    "type": "CodeSystem"
  }, {
    "type": "Patient",
    "codeFilter": [ {
      "path": "postalCode"
    } ]
  }, {
    "type": "CodeSystem"
  }, {
    "type": "Patient",
    "codeFilter": [ {
      "path": "state"
    } ]
  }, {
    "type": "Organization"
  }, {
    "type": "Observation"
  }, {
    "type": "Observation"
  }, {
    "type": "Organization"
  }, {
    "type": "Encounter",
    "codeFilter": [ {
      "path": "status",
      "code": [ {
        "code": "in-progress"
      } ]
    } ]
  }, {
    "type": "Encounter",
    "codeFilter": [ {
      "path": "status",
      "code": [ {
        "code": "finished"
      } ]
    } ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  } ]
}